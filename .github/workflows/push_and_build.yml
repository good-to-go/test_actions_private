name: Deploy Next.js container image to ECR

on:
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:
    inputs:
      tag-name:
        type: string
        required: true
        description: 'tag name'

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

jobs:
  push:
    runs-on: ubuntu-latest
    # `permissions` を設定しないと OIDC が使えないので注意
    permissions:
      id-token: write
      contents: read
    steps:
       
      - name: checkout
        uses: actions/checkout@v4
      
      #- name: Set up QEMU
      #  uses: docker/setup-qemu-action@v3
      
      #- name: Set up Docker Buildx
      #  uses: docker/setup-buildx-action@v3

      # AWS 認証
      - uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-region: "ap-northeast-1"
          role-to-assume: "arn:aws:iam::070692067187:role/ecr"

      # ECR ログイン
      - uses: aws-actions/amazon-ecr-login@v1
        id: login-ecr # outputs で参照するために id を設定

      - uses: docker/login-action@v1
        with:
          registry: ${{ steps.login-ecr.outputs.registry }}

      # Docker イメージを build・push する
      - name: Build and push
        id: docker_build
        uses: docker/build-push-action@v2
        with:
          context: .
          file: ./Dockerfile
          push: true
          platforms: linux/amd64,linux/arm64
          tags: ${{ steps.login-ecr.outputs.registry }}/example-repository:${{ github.event.inputs.tag-name }}
    
      # - name: build and push docker image to ecr
      #  env:
      #    # ECR レジストリを `aws-actions/amazon-ecr-login` アクションの `outputs.registry` から取得
      #    REGISTRY: ${{ steps.login-ecr.outputs.registry }}
      #    # イメージを push する ECR リポジトリ名
      #    REPOSITORY: "example-repository"
      #    # 任意のイメージタグ
      #    # 今回は Git のコミットハッシュにしておく
      #    IMAGE_TAG: ${{ github.sha }}
      #  run: |
      #    docker buildx build --platform=arm64 -t ${{ env.REGISTRY }}/${{ env.REPOSITORY }}:${{ github.event.inputs.tag-name }} -f ./Dockerfile --no-cache=true .
      #    docker push ${{ env.REGISTRY }}/${{ env.REPOSITORY }}:${{ github.event.inputs.tag-name }}
